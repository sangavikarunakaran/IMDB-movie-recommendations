import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Make sure the CSV has at least 'title' and 'plot' columns
df = pd.read_csv("imdb_movies.csv")
df = df.dropna(subset=['title', 'plot'])  # Remove missing entries

vectorizer = TfidfVectorizer(stop_words='english')
tfidf_matrix = vectorizer.fit_transform(df['plot'])

cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

def get_recommendations(title, top_n=5):
    title = title.lower()
    indices = df[df['title'].str.lower() == title].index
    if len(indices) == 0:
        return ["Movie not found."]
    
    idx = indices[0]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    
    top_indices = [i[0] for i in sim_scores[1:top_n+1]]
    return df['title'].iloc[top_indices].tolist()

query = input("Enter a movie title: ")
recommendations = get_recommendations(query)

print("\nðŸŽ¬ Recommended Movies:")
for i, rec in enumerate(recommendations, 1):
    print(f"{i}. {rec}")
